* this file should go away before asking for a review :)

* I think we should wait for indexing-by-arrays-2, since this would clean up
  the iterator interface

* For getitem, we need to reuse parent getitem, but with some hook
  that recomputes indexes. That hook would be used for any sort of access,
  be it slices or be it integers, but in general I would like to avoid code
  duplication, since the indexing is getting slowly fairly complex.

* iterating over a transposed array still fails.

* next_skip_x is implemented badly. It still iterates over items (calls
  next_skip n times) and is jit.unroll_safe. This means that the JIT will assume
  skip is a constant and compile a linear trace unrolling all iterations. This
  is *BAD*. Instead it would be something like:

  for arrays:

  res.offset = self.offset + skip

  for views something slightly more complex that does appropriate modulo.

  Note that next() has unroll_safe, because the loop only dependas on the
  length of shape which is a constant for assembler.